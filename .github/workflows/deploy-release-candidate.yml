name: ‚ñ∂Ô∏è Deploy Release Candidate (TestFlight/Google Play Alpha)

on:
  workflow_dispatch:
    inputs:
      bumpVersion:
        description: Which part of version to bump.
        required: true
        default: "build"
        type: choice
        options:
          - major
          - minor
          - patch
          - build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false # we don't want to abort releases

defaults:
  run:
    shell: bash

jobs:
  bump-version:
    timeout-minutes: 5
    runs-on:
      - self-hosted
      - macosx
    permissions: {}

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          token: "${{ secrets.PAT_COMMIT_MAIN_NEW }}"

      - name: Prepare environment
        uses: ./.github/actions/prepare

      - name: Bump version
        run: |
          cider bump ${{ inputs.bumpVersion }} --bump-build

      - name: run flutter pub get everywhere
        run: |
          make run_pub_get_everywhere_ci

      - name: Commit updated pubspec.yaml
        id: commit
        uses: EndBug/add-and-commit@v9
        with:
          add: 'pubspec.yaml **/pubspec.lock'
          message: "[skip ci] bump version"
          push: true

    outputs:
      sha: ${{ steps.commit.outputs.commit_long_sha }}

  set-jira-fixversion:
    timeout-minutes: 5
    runs-on:
      - self-hosted
      - macosx
    permissions:
      contents: read # to checkout

    needs:
      - bump-version

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump-version.outputs.sha }}
          fetch-depth: 0 # to catch previous tags

      - name: Prepare environment
        uses: ./.github/actions/prepare

      - name: Update Jira tickets
        run: |
          bundle exec fastlane jira_tickets_set_fixversion
        env:
          JIRA_ACCESS_TOKEN: ${{ secrets.JIRA_ACCESS_TOKEN }}
        working-directory: scripts
        continue-on-error: true

  generate-release-notes:
    timeout-minutes: 5
    runs-on:
      - self-hosted
      - macosx
    permissions:
      contents: read # to checkout

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # to catch previous tags

      - name: Prepare environment
        uses: ./.github/actions/prepare

      - name: Generate release notes
        id: release_notes
        # https://docs.github.com/en//actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
        run: |
          bundle exec fastlane jira_get_release_notes out_file:../release_notes.txt
          echo "RELEASE_NOTES<<EOCHANGELOG" >> $GITHUB_OUTPUT
          cat release_notes.txt >> $GITHUB_OUTPUT
          echo -e "\nEOCHANGELOG" >> $GITHUB_OUTPUT
        env:
          JIRA_ACCESS_TOKEN: ${{ secrets.JIRA_ACCESS_TOKEN }}
        working-directory: scripts
    outputs:
      release_notes: ${{ steps.release_notes.outputs.RELEASE_NOTES }}

  create-tags:
    timeout-minutes: 2
    runs-on:
      - self-hosted
      - macosx
    permissions:
      contents: write # to checkout and push tags

    needs:
      - bump-version
      - set-jira-fixversion

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump-version.outputs.sha }}

      - name: Prepare environment
        uses: ./.github/actions/prepare

      - name: Parse current version from pubspec.yaml
        id: version
        run: |
          VERSION=$(cider version)
          echo "VERSION=${VERSION}" >> $GITHUB_OUTPUT

      - name: Create tags
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + process.env.TAG_IOS,
              sha: process.env.SHA,
            })
            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: "refs/tags/" + process.env.TAG_ANDROID,
              sha: process.env.SHA,
            })
        env:
          SHA: ${{ needs.bump-version.outputs.sha }}
          TAG_IOS: Picnic-iOS-${{ steps.version.outputs.VERSION }}
          TAG_ANDROID: Picnic-Android-${{ steps.version.outputs.VERSION }}

  deploy-internal:
    uses: ./.github/workflows/reusable-deploy-internal.yml
    secrets: inherit
    with:
      sha_commit: ${{ needs.bump-version.outputs.sha }}
    needs:
      - bump-version
      - create-tags

  deploy-release-candidate:
    uses: ./.github/workflows/reusable-deploy-release-candidate.yml
    secrets: inherit
    needs:
      - bump-version
      - deploy-internal

  notify-failed:
    timeout-minutes: 2
    runs-on:
      - self-hosted
      - macosx
    if: ${{ failure() || cancelled() }}
    needs:
      - bump-version
      - deploy-release-candidate
      - create-tags

    steps:
      - name: Checkout branch
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.bump-version.outputs.sha }}

      - name: Prepare environment variavles
        uses: ./.github/actions/prepare_env

      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: sa-notify@picnic.zone
          password: ${{ secrets.NOTIFY_EMAIL_PASSWORD }}
          subject: Frontend release failed
          to: frontend@picnic.zone
          cc: devops@picnic.zone,qa@picnic.zone,all-openg@picnic.zone,nick@picnic.zone
          from: GitHub Actions
          body: |
            Release candidate failed :(
            Check out ${{ env.GITHUB_BUILD_URL }} for more info.

  notify-success:
    timeout-minutes: 2
    runs-on:
      - self-hosted
      - macosx
    needs:
      - generate-release-notes
      - deploy-release-candidate
      - create-tags

    steps:
      - name: Send email
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          secure: true
          username: sa-notify@picnic.zone
          password: ${{ secrets.NOTIFY_EMAIL_PASSWORD }}
          subject: Frontend release succeeded
          to: frontend@picnic.zone
          cc: devops@picnic.zone,qa@picnic.zone,all-openg@picnic.zone,nick@picnic.zone
          from: GitHub Actions
          body: |
            Release candidate succeeded üçâ

            Release notes:

            ${{ needs.generate-release-notes.outputs.release_notes }}
